# Use root/example as user/password credentials

# to stop this yaml - docker compose -f mongo.yaml stop 
# to remove this yaml - docker compose -f mongo.yaml down 
# to start this yaml - docker compose -f mongo.yaml up -d

# use an external volume - created by "docker volume create mongo-vol"
volumes:
  mongo-vol:
    external: true

networks:
  default:
    name: mongo_network

services:

  mongo:
    image: mongo
    restart: always
    container_name: mongodb_container  # string that specifies a custom container name, rather than a name generated by default.
    volumes:
      - mongo-vol:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: kcahow
      MONGO_INITDB_ROOT_PASSWORD: Goblin!23


# With the depends_on attribute, you can control the order of service startup and shutdown. 
#     It is useful if services are closely coupled, and the startup sequence impacts the application's functionality.


# to access mongo express in a browser: http://localhost:8091/
  mongo-express:
    image: mongo-express
    container_name: mongo_express_container #  string that specifies a custom container name, rather than a name generated by default.
    restart: always
    depends_on: 
      - mongo
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: kcahow
      ME_CONFIG_MONGODB_ADMINPASSWORD: Goblin!23
      ME_CONFIG_MONGODB_URL: mongodb://kcahow:Goblin!23@mongo:27017/
      ME_CONFIG_BASICAUTH: false


