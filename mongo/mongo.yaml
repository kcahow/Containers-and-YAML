# Use root/example as user/password credentials

# to stop this yaml - docker compose -f mongo.yaml stop
# to remove this yaml - docker compose -f mongo.yaml down
# to start this yaml - docker compose -f mongo.yaml up -d

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb # string that specifies a custom container name, rather than a name generated by default.
    hostname: mongodb
    restart: always
    volumes:
      - mongo-data:/data/db/
      - mongo-log:/var/log/mongodb/
    env_file:
      - .env
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express #  string that specifies a custom container name, rather than a name generated by default.
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - 8081:8081
    networks:
      - mongo-network
    depends_on:
      - mongodb

networks:
  mongo-network:
    driver: bridge
    name: mongo-network

volumes:
  mongo-data:
    name: mongo-data
    driver: local
  mongo-log:
    name: mongo-log
    driver: local
